/*!
 *  Bayrell Common Languages Transcompiler
 *
 *  (c) Copyright 2016-2018 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.bayrell.org/licenses/APACHE-LICENSE-2.0.html
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
 
namespace BayrellLang.OpCodes;

use BayrellLang.OpCodes.BaseOpCode;


export class OpWhile extends BaseOpCode{
	
	public string op = "op_while";
	
	public serializable BaseOpCode condition = null;
	public serializable Vector<BaseOpCode> childs = null;
	
	
	/**
	 * Returns classname of the object
	 * @return string
	 */
	public string getClassName(){
		return "BayrellLang.OpCodes.OpWhile";
	}
	
	
	
	/**
	 * Constructor
	 */ 
	void constructor(BaseOpCode condition = null, Vector<BaseOpCode> childs = null)
	{
		parent();
		this.condition = condition;
		this.childs = childs;
	}
	
	
	
	/**
	 * Destructor
	 */ 
	void destructor(){
		parent();
	}
	
}