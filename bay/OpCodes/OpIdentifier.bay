/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
 
namespace BayLang.OpCodes;

use Runtime.Serializer;
use BayLang.OpCodes.BaseOpCode;


class OpIdentifier extends BaseOpCode
{
	static const string KIND_PIPE = "pipe";
	static const string KIND_VARIABLE = "var";
	static const string KIND_SYS_TYPE = "sys";
	static const string KIND_SYS_FUNCTION = "sys_fn";
	static const string KIND_FUNCTION = "fn";
	static const string KIND_CONTEXT = "ctx";
	static const string KIND_CONSTANT = "const";
	static const string KIND_CLASS = "class";
	static const string KIND_CLASSREF = "classref";
	
	string op = "op_identifier";
	string value = "";
	string kind = "";
	
	
	/**
	 * Serialize object
	 */
	void serialize(Serializer serializer, Map data)
	{
		parent(serializer, data);
		serializer.process(this, "kind", data);
		serializer.process(this, "value", data);
	}
}