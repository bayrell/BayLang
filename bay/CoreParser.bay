/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2025 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace BayLang;

use Runtime.BaseObject;
use Runtime.lib;
use Runtime.rs;
use Runtime.Reference;
use Runtime.Interfaces.ContextInterface;
use BayLang.Caret;
use BayLang.CoreToken;
use BayLang.SaveOpCode;
use BayLang.TokenReader;
use BayLang.Exceptions.ParserExpected;
use BayLang.OpCodes.BaseOpCode;


class CoreParser extends BaseObject
{
	string file_name = "";
	string content = "";
	int content_size = 0;
	int tab_size = 4;
	
	
	/**
	 * Set content
	 */
	CoreParser setContent(string content)
	{
		this.content = content;
		this.content_size = rs::strlen(content);
		return this;
	}
	
	
	/**
	 * Create reader
	 */
	TokenReader createReader()
	{
		TokenReader reader = new TokenReader();
		reader.init(
			new Caret{
				"content": new Reference(this.content),
				"tab_size": this.tab_size,
			}
		);
		return reader;
	}
	
	
	/**
	 * Parse file and convert to BaseOpCode
	 */
	BaseOpCode parse()
	{
		return null;
	}
}