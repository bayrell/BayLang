/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2025 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace BayLang.LangNode;

use BayLang.LangES6.TranslatorES6Program;
use BayLang.OpCodes.OpUse;


class TranslatorNodeProgram extends TranslatorES6Program
{
	/**
	 * OpUse
	 */
	void OpUse(OpUse op_code, Collection<string> result)
	{
		this.translator.uses.set(op_code.alias, op_code.name);
		result.push("const " ~ op_code.alias ~ " = use(" ~
			this.translator.toString(op_code.name) ~ ");");
		return true;
	}
}