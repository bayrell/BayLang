/*!
 *  Bayrell Language
 *
 *  (c) Copyright 2016-2023 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Bayrell.Lang.LangNode;

use Runtime.BaseStruct;
use Bayrell.Lang.CoreTranslator;
use Bayrell.Lang.SaveOpCode;
use Bayrell.Lang.LangES6.TranslatorES6;
use Bayrell.Lang.LangES6.TranslatorES6AsyncAwait;
use Bayrell.Lang.LangES6.TranslatorES6Expression;
use Bayrell.Lang.LangES6.TranslatorES6Html;
use Bayrell.Lang.LangES6.TranslatorES6Operator;
use Bayrell.Lang.LangES6.TranslatorES6Program;
use Bayrell.Lang.LangNode.TranslatorNodeExpression;
use Bayrell.Lang.LangNode.TranslatorNodeProgram;
use Bayrell.Lang.OpCodes.BaseOpCode;


struct TranslatorNode extends TranslatorES6
{
	/* Translators */
	TranslatorES6AsyncAwait async_await = null;
	TranslatorES6Expression expression = null;
	TranslatorES6Html html = null;
	TranslatorES6Operator operator = null;
	TranslatorES6Program program = null;
	
	/* Flags */
	bool use_module_name = true;
	bool enable_async_await = true;
	bool emulate_async_await = false;
	bool enable_introspection = false;
	bool enable_context = true;
	
	
	/**
	 * Reset translator
	 */
	pure TranslatorES6 reset(TranslatorES6 t)
	{
		t = parent::reset(t);
		t <= expression <= new TranslatorNodeExpression();
		t <= program <= new TranslatorNodeProgram();
		t <= preprocessor_flags <= t.preprocessor_flags.concat({
			"BACKEND": true,
			"NODEJS": true,
			"ES6": false,
		});
		return t;
	}
	
	
	
	/**
	 * Translate BaseOpCode
	 */
	pure list<TranslatorES6, string> translate(TranslatorES6 t, BaseOpCode op_code)
	{
		t = static::reset(t);
		return t.program::translateProgram(t, op_code);
	}
}