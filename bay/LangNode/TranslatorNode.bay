/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2025 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace BayLang.LangNode;

use Runtime.BaseStruct;
use BayLang.CoreTranslator;
use BayLang.SaveOpCode;
use BayLang.LangES6.TranslatorES6;
use BayLang.LangNode.TranslatorNodeExpression;
use BayLang.LangNode.TranslatorNodeProgram;
use BayLang.OpCodes.BaseOpCode;


class TranslatorNode extends TranslatorES6
{
	TranslatorNodeExpression expression = new TranslatorNodeExpression(this);
	TranslatorNodeProgram program = new TranslatorNodeProgram(this);
	
	/* Flags */
	bool use_module_name = true;
	bool use_window = false;
	
	
	/**
	 * Constructor
	 */
	void constructor()
	{
		parent();
		this.preprocessor_flags.set("BACKEND", true);
		this.preprocessor_flags.set("ES6", false);
		this.preprocessor_flags.set("NODEJS", true);
	}
	
	
	/**
	 * Use module
	 */
	string useModule(string module_name)
	{
		module_name = parent(module_name);
		return "use(" ~ this.toString(module_name) ~ ")";
	}
	
	
	/**
	 * Translate BaseOpCode
	 */
	string translate(BaseOpCode op_code)
	{
		Collection<string> result = [];
		result.push('"use strict;"');
		result.push(this.newLine());
		result.push("const use = require('bay-lang').use;");
		result.push(this.newLine());
		result.push("const {rtl, rs} = use.rtl();");
		result.push(this.newLine());
		
		/* Translate program */
		this.program.translate(op_code, result);
		
		/* Add export */
		this.program.addModuleExports(result);
		
		return rs::join("", result);
	}
}