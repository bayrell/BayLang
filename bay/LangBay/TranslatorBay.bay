/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace BayLang.LangBay;

use Runtime.re;
use Runtime.BaseObject;
use BayLang.CoreTranslator;
use BayLang.OpCodes.BaseOpCode;
use BayLang.LangBay.TranslatorBayExpression;
use BayLang.LangBay.TranslatorBayHtml;
use BayLang.LangBay.TranslatorBayOperator;
use BayLang.LangBay.TranslatorBayProgram;


class TranslatorBay extends CoreTranslator
{	
	/* Translators */
	TranslatorBayExpression expression = new TranslatorBayExpression(this);
	TranslatorBayOperator operator = new TranslatorBayOperator(this);
	TranslatorBayProgram program = new TranslatorBayProgram(this);
	TranslatorBayHtml html = new TranslatorBayHtml(this);
	
	
	/**
	 * Returns string
	 */
	string toString(string s)
	{
		s = re::replace('\\\\', '\\\\', s);
		s = re::replace('"', '\\\"', s);
		s = re::replace('\n', '\\n', s);
		s = re::replace('\r', '\\r', s);
		s = re::replace('\t', '\\t', s);
		return "\"" ~ s ~ "\"";
	}
	
	
	/**
	 * Translate BaseOpCode
	 */
	string translate(BaseOpCode op_code)
	{
		Collection<string> content = [];
		if (op_code.is_component)
		{
			this.html.translate(op_code, content);
		}
		else
		{
			this.program.translate(op_code, content);
		}
		return rs::join("", content);
	}
}