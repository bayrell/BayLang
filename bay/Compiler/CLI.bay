/*!
 *  Bayrell Language
 *
 *  (c) Copyright 2016-2023 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Bayrell.Lang.Compiler;

use Bayrell.Lang.Compiler.Module;
use Bayrell.Lang.Compiler.SettingsProvider;


class CLI
{
	
	/**
	 * Init CLI
	 */
	async static void init()
	{
		SettingsProvider provider = new SettingsProvider();
		await provider.readSettings();
		@.addProvider(classof SettingsProvider, provider);
	}
	
	
	
	/**
	 * Returns modules
	 */
	static Collection<Module> getModules()
	{
		SettingsProvider provider = @.getProvider(classof SettingsProvider);
		return provider.modules;
	}
	
	
	
	/**
	 * Compile file
	 */
	static void compileFile(string file_name)
	{
		
	}
	
	
	/**
	 * Compile module
	 */
	static void compileModule(string module_name)
	{
		
	}
	
	
	/**
	 * Make es6 bundle
	 */
	static void makeES6Bundle(string module_name)
	{
		
	}
}